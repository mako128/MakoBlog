{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    isSignedIn: false,\n    userData: null,\n    searchInput: \"UK\",\n    blogData: null\n  },\n  reducers: {\n    serSignedIn: (state, action) => {\n      state.isSignedIn = action.payload;\n    },\n    setUserData: (state, action) => {\n      state.userData = action.payload;\n    },\n    setInput: (state, action) => {\n      state.searchInput = action.payload;\n    },\n    setBlogData: (state, action) => {\n      state.blogData = action.payload;\n    }\n  }\n});\nexport const {\n  setSignedIn,\n  setUserData,\n  setInput,\n  setBlogData\n} = userSlice.actions;\nexport const selectSignedIn = state => state.user.isSignedIn;\nexport const selectUserData = state => state.user.userData;\nexport const selectUserInput = state => state.user.searchInput;\nexport const selectBlogData = state => state.user.blogData;\nexport default userSlice.reducer;","map":{"version":3,"sources":["/Users/Makovitch/Desktop/reddit-stories-app/src/features/userSlice.js"],"names":["createSlice","userSlice","name","initialState","isSignedIn","userData","searchInput","blogData","reducers","serSignedIn","state","action","payload","setUserData","setInput","setBlogData","setSignedIn","actions","selectSignedIn","user","selectUserData","selectUserInput","selectBlogData","reducer"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC1BE,EAAAA,IAAI,EAAC,MADqB;AAE1BC,EAAAA,YAAY,EAAC;AACbC,IAAAA,UAAU,EAAC,KADE;AAEbC,IAAAA,QAAQ,EAAC,IAFI;AAGbC,IAAAA,WAAW,EAAC,IAHC;AAIbC,IAAAA,QAAQ,EAAE;AAJG,GAFa;AAS1BC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,WAAW,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAoB;AAC7BD,MAAAA,KAAK,CAACN,UAAN,GAAmBO,MAAM,CAACC,OAA1B;AACH,KAHI;AAILC,IAAAA,WAAW,EAAC,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAC3BD,MAAAA,KAAK,CAACL,QAAN,GAAiBM,MAAM,CAACC,OAAxB;AACH,KANI;AAOLE,IAAAA,QAAQ,EAAC,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACxBD,MAAAA,KAAK,CAACJ,WAAN,GAAoBK,MAAM,CAACC,OAA3B;AACH,KATI;AAULG,IAAAA,WAAW,EAAC,CAACL,KAAD,EAAQC,MAAR,KAAmB;AAC3BD,MAAAA,KAAK,CAACH,QAAN,GAAiBI,MAAM,CAACC,OAAxB;AACH;AAZI;AATiB,CAAD,CAA7B;AAyBA,OAAO,MAAM;AACTI,EAAAA,WADS;AAETH,EAAAA,WAFS;AAGTC,EAAAA,QAHS;AAITC,EAAAA;AAJS,IAKTd,SAAS,CAACgB,OALP;AAOP,OAAO,MAAMC,cAAc,GAAIR,KAAD,IAAWA,KAAK,CAACS,IAAN,CAAWf,UAA7C;AACP,OAAO,MAAMgB,cAAc,GAAIV,KAAD,IAAWA,KAAK,CAACS,IAAN,CAAWd,QAA7C;AACP,OAAO,MAAMgB,eAAe,GAAIX,KAAD,IAAWA,KAAK,CAACS,IAAN,CAAWb,WAA9C;AACP,OAAO,MAAMgB,cAAc,GAAIZ,KAAD,IAAWA,KAAK,CAACS,IAAN,CAAWZ,QAA7C;AAEP,eAAeN,SAAS,CAACsB,OAAzB","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\n\nconst userSlice = createSlice({\n    name:\"user\",\n    initialState:{\n    isSignedIn:false,\n    userData:null,\n    searchInput:\"UK\",\n    blogData: null,\n\n    },\n    reducers:{\n        serSignedIn: (state, action ) => {\n            state.isSignedIn = action.payload;\n        },\n        setUserData:(state, action) => {\n            state.userData = action.payload\n        },\n        setInput:(state, action) => {\n            state.searchInput = action.payload\n        },\n        setBlogData:(state, action) => {\n            state.blogData = action.payload\n        },\n    },\n});\n\nexport const {\n    setSignedIn,\n    setUserData,\n    setInput,\n    setBlogData\n} = userSlice.actions;\n\nexport const selectSignedIn = (state) => state.user.isSignedIn;\nexport const selectUserData = (state) => state.user.userData;\nexport const selectUserInput = (state) => state.user.searchInput;\nexport const selectBlogData = (state) => state.user.blogData;\n\nexport default userSlice.reducer;"]},"metadata":{},"sourceType":"module"}